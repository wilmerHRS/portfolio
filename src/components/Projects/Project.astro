---
import { IProject } from "@interfaces/projects.interface";
import Data from "./Data/Data.astro";
import Images from "./Images.astro";
import ModalGithub from "./ModalGithub/ModalGithub.astro";

interface Props {
  positionImg?: "left" | "right";
  data: IProject;
}

const { positionImg = "left", data }: Props = Astro.props;

const contImagesClass = positionImg == "right" ? "lg:right-0" : "";
const contDataClass =
  positionImg == "right" ? "md:justify-start" : "md:justify-end";

const images = data.images.map(
  (image) => `images/projects/${data.slug}/${image}`
);

let numRepositories =
  (data.repositories.backend?.length ?? 0) +
  (data.repositories.frontend?.length ?? 0);
---

<!-- Proyecto -->
<div
  class="container max-w-screen-md lg:max-w-screen-xl mx-auto relative c-aboutme-height lg:mb-20"
>
  <div
    class="lg:absolute lg:top-0 lg:z-10 lg:h-full flex flex-wrap content-center justify-center lg:w-2/5"
    class:list={[contImagesClass]}
  >
    <Images position={positionImg} images={images} />
  </div>
  <div
    class="relative lg:static -top-36 lg:top-0 flex flex-row justify-center content-center"
    class:list={[contDataClass]}
  >
    <div class="lg:basis-4/6">
      <Data
        position={positionImg}
        data={data}
        numRepositories={numRepositories}
      />
    </div>
  </div>
</div>
<!-- Modal -->
{
  numRepositories >= 2 ? (
    <ModalGithub id={`modal-${data.slug}`} repositories={data.repositories} />
  ) : null
}

<script define:vars={{ id: data.slug, numRepositories }}>
  if (numRepositories >= 2) {
    const modalGithub = document.getElementById(`modal-${id}`);
    const btn = document.getElementById(`btn-${id}`);
    let modal = modalGithub.querySelector(".modal");
    let body = document.querySelector("body");

    btn.addEventListener("click", () => {
      modalGithub.style.opacity = "1";
      modalGithub.style.visibility = "visible";
      modal?.classList.toggle("modal-close");
      body?.classList.toggle("overflow-hidden");
    });
  }
</script>
